// Generated by data binding compiler. Do not edit!
package com.example.wolforders.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.wolforders.R;
import com.example.wolforders.data.model.entity.WolfOrder;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class OrderItemLayoutBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView dateText;

  @NonNull
  public final TextView dateTitle;

  @NonNull
  public final ImageButton imageButton;

  @NonNull
  public final TextView orderNoText;

  @NonNull
  public final TextView orderNoTitle;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final TextView totalText;

  @NonNull
  public final TextView totalTitle;

  @Bindable
  protected WolfOrder mOrder;

  @Bindable
  protected String mTotal;

  protected OrderItemLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cardView, TextView dateText, TextView dateTitle, ImageButton imageButton,
      TextView orderNoText, TextView orderNoTitle, TextView statusText, TextView totalText,
      TextView totalTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardView = cardView;
    this.dateText = dateText;
    this.dateTitle = dateTitle;
    this.imageButton = imageButton;
    this.orderNoText = orderNoText;
    this.orderNoTitle = orderNoTitle;
    this.statusText = statusText;
    this.totalText = totalText;
    this.totalTitle = totalTitle;
  }

  public abstract void setOrder(@Nullable WolfOrder order);

  @Nullable
  public WolfOrder getOrder() {
    return mOrder;
  }

  public abstract void setTotal(@Nullable String total);

  @Nullable
  public String getTotal() {
    return mTotal;
  }

  @NonNull
  public static OrderItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.order_item_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static OrderItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<OrderItemLayoutBinding>inflateInternal(inflater, R.layout.order_item_layout, root, attachToRoot, component);
  }

  @NonNull
  public static OrderItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.order_item_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static OrderItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<OrderItemLayoutBinding>inflateInternal(inflater, R.layout.order_item_layout, null, false, component);
  }

  public static OrderItemLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static OrderItemLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (OrderItemLayoutBinding)bind(component, view, R.layout.order_item_layout);
  }
}
